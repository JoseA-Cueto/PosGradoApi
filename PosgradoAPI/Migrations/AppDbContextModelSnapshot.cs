// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PosgradoAPI.DataBaseContext;

#nullable disable

namespace PosgradoAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    partial class AppDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("PosgradoAPI.Core.Models.GraduateProgram", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AccreditationCategory")
                        .HasColumnType("int");

                    b.Property<bool>("IsLocalDevelopment")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStrategicSector")
                        .HasColumnType("bit");

                    b.Property<int>("Modality")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("GraduateProgram");
                });

            modelBuilder.Entity("PosgradoAPI.Core.Models.Professional", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AffiliationWithTheParty")
                        .HasColumnType("int");

                    b.Property<int?>("GraduateProgramId")
                        .HasColumnType("int");

                    b.Property<bool>("IsLocalDevelopment")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStrategicSector")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("ReceivedTraining")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GraduateProgramId");

                    b.ToTable("Professional");
                });

            modelBuilder.Entity("PosgradoAPI.Core.Models.Professor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AffiliationWithTheParty")
                        .HasColumnType("int");

                    b.Property<int?>("GraduateProgramId")
                        .HasColumnType("int");

                    b.Property<bool>("IsDirectingDoctorate")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProfessorDegree")
                        .HasColumnType("int");

                    b.Property<bool>("ReceivedTraining")
                        .HasColumnType("bit");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.Property<int>("TypeProfesional")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("GraduateProgramId");

                    b.ToTable("Professor");
                });

            modelBuilder.Entity("PosgradoAPI.Core.Models.Thesis", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsLocalDevelopment")
                        .HasColumnType("bit");

                    b.Property<bool>("IsStrategicSector")
                        .HasColumnType("bit");

                    b.Property<int>("ProfessionalId")
                        .HasColumnType("int");

                    b.Property<int>("ProfessorId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProfessionalId");

                    b.HasIndex("ProfessorId");

                    b.ToTable("Thesis");
                });

            modelBuilder.Entity("PosgradoAPI.Core.Models.Professional", b =>
                {
                    b.HasOne("PosgradoAPI.Core.Models.GraduateProgram", "GraduateProgram")
                        .WithMany("Professional")
                        .HasForeignKey("GraduateProgramId");

                    b.Navigation("GraduateProgram");
                });

            modelBuilder.Entity("PosgradoAPI.Core.Models.Professor", b =>
                {
                    b.HasOne("PosgradoAPI.Core.Models.GraduateProgram", "GraduateProgram")
                        .WithMany("Professor")
                        .HasForeignKey("GraduateProgramId");

                    b.Navigation("GraduateProgram");
                });

            modelBuilder.Entity("PosgradoAPI.Core.Models.Thesis", b =>
                {
                    b.HasOne("PosgradoAPI.Core.Models.Professional", "Professional")
                        .WithMany("Thesis")
                        .HasForeignKey("ProfessionalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PosgradoAPI.Core.Models.Professor", "Professor")
                        .WithMany("Thesis")
                        .HasForeignKey("ProfessorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Professional");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("PosgradoAPI.Core.Models.GraduateProgram", b =>
                {
                    b.Navigation("Professional");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("PosgradoAPI.Core.Models.Professional", b =>
                {
                    b.Navigation("Thesis");
                });

            modelBuilder.Entity("PosgradoAPI.Core.Models.Professor", b =>
                {
                    b.Navigation("Thesis");
                });
#pragma warning restore 612, 618
        }
    }
}
